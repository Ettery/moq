<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;net5.0</TargetFrameworks>
    <Nullable>annotations</Nullable>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <!-- Used in WriteCscCommandLineArgs target -->
    <ProvideCommandLineArgs>true</ProvideCommandLineArgs>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\Moq.Package\Mock.cs" Link="Moq\Mock.cs" CopyToOutputDirectory="PreserveNewest" />
    <Compile Include="..\Moq.Package\Mock.Overloads.cs" Link="Moq\Mock.Overloads.cs" CopyToOutputDirectory="PreserveNewest" />
    <Compile Include="..\Moq.Package\Mock.StaticFactory.cs" Link="Moq\Mock.StaticFactory.cs" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <ProjectProperty Include="MSBuildProjectDirectory" />
    <ProjectProperty Include="MSBuildBinPath" />
    <ProjectProperty Include="IntermediateOutputPath" />
    <ProjectProperty Include="EmitCompilerGeneratedFiles" />
    <ProjectProperty Include="TargetPath" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Analyzer.Testing" />

    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="Microsoft.TestPlatform.ObjectModel" />
    <PackageReference Include="xunit" />
    <PackageReference Include="xunit.runner.console" />
    <PackageReference Include="xunit.runner.msbuild" Condition="'$(TargetFramework)' == 'net472'" />
    <PackageReference Include="xunit.runner.visualstudio" />

    <PackageReference Include="Microsoft.Build" ExcludeAssets="runtime" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" ExcludeAssets="runtime" />
    <PackageReference Include="Microsoft.Build.Locator" />
    <PackageReference Include="MSBuild.StructuredLogger" />

    <PackageReference Include="System.ComponentModel.Composition" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Features" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic.Features" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic.Workspaces" />
    <PackageReference Include="SQLitePCLRaw.bundle_green" />

    <PackageReference Include="TypeNameFormatter.Sources" />
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\Moq.Sdk\Moq.Sdk.csproj" />
    <ProjectReference Include="..\Moq\Moq.csproj" />
    <ProjectReference Include="..\Moq.StaticProxy\Moq.StaticProxy.csproj" />
  </ItemGroup>

  <Target Name="AddConstants" BeforeTargets="PrepareForBuild;CompileDesignTime;GenerateMSBuildEditorConfigFileShouldRun">
    <ItemGroup>
      <FileConstant Include="@(Compile)" Condition="$([MSBuild]::ValueOrDefault('%(RelativeDir)', '').StartsWith('Scenarios'))" />
    </ItemGroup>
  </Target>

  <Target Name="WriteCscCommandLineArgs" AfterTargets="CoreCompile"
          Inputs="@(IntermediateAssembly)" Outputs="$(OutputPath)csc.txt"
          Condition="'@(CscCommandLineArgs)' != ''">
    <WriteLinesToFile Lines="@(CscCommandLineArgs)" File="$(OutputPath)csc.txt" Overwrite="true" WriteOnlyWhenDifferent="true" />
  </Target>

  <Target Name="WriteLibs" AfterTargets="ResolvePackageAssets">
    <WriteLinesToFile Lines="@(RuntimeCopyLocalItems -> '%(FullPath)')" File="$(OutputPath)lib.txt"  Overwrite="true" WriteOnlyWhenDifferent="true" />
  </Target>

</Project>
